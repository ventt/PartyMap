name: CI/CD â€” Hetzner VM

on:
  push:
    branches: [main]

env:
  IMAGE: ghcr.io/ventt/partymap:${{ github.sha }}

concurrency:
  group: deploy-hetzner
  cancel-in-progress: true

jobs:
  test_build_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - run: corepack enable
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint
      - run: pnpm test --if-present

      # Build & push to GHCR
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push
        run: |
          docker build -t ghcr.io/ventt/partymap:${{ github.sha }} .
          docker push ghcr.io/ventt/partymap:${{ github.sha }}
          docker tag ghcr.io/ventt/partymap:${{ github.sha }} ghcr.io/ventt/partymap:latest
          docker push ghcr.io/ventt/partymap:latest


  deploy:
    needs: test_build_push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Copy stack files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}   # deploy
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.yml,Caddyfile"
          target: "/opt/partymap"

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}   # deploy
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /opt/partymap

            # login to GHCR only if pulling a private image
            if [ -n "${{ secrets.GHCR_USER }}" ] && [ -n "${{ secrets.GHCR_TOKEN }}" ]; then
              echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USER }}" --password-stdin
            fi

            IMAGE_TAG=${{ github.sha }} docker compose pull app || true
            IMAGE_TAG=${{ github.sha }} docker compose up -d --remove-orphans
